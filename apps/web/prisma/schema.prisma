generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
  binaryTargets   = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @db.Uuid
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @db.Uuid
  sessionToken String   @unique
  userId       String   @db.Uuid
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @db.Uuid
  firstName     String?
  lastName      String?
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  location      String?
  title         String?
  description   String?
  created       DateTime  @default(now())
  updated       DateTime  @default(now())
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  token      String   @id
  identifier String
  expires    DateTime

  @@unique([identifier, token])
}

model ShareProjectFormSubmission {
  id          String       @id @db.Uuid
  reference   String       @unique
  name        String
  quality     String
  email       String
  phone       String?
  domain      String
  solution    String
  description String
  dates       String
  partners    String
  tech        String
  created     DateTime     @default(now())
  communityId String
  attachments Attachment[]
  community   Community    @relation(fields: [communityId], references: [id])
}

model Community {
  id                 String                       @id
  name               String
  text               String
  scale              String
  zipcodes           String[]
  projectSubmissions ShareProjectFormSubmission[]
}

model Attachment {
  key                 String                     @id
  type                String
  name                String
  created             DateTime                   @default(now())
  projectSubmissionId String                     @db.Uuid
  projectSubmission   ShareProjectFormSubmission @relation(fields: [projectSubmissionId], references: [id])
}

model Project {
  id                      String       @id @db.Uuid
  gristId                 Int?         @unique
  showcase                Int?
  coverImage              String
  coverImageAlt           String?
  slug                    String       @unique
  district                String?
  city                    String?
  title                   String
  subtitle                String
  localizationId          Int
  localizationDescription String?
  goals                   String[]
  characteristics         String[]
  description             String
  budget                  Float?
  funding                 String?
  inaugurationDate        DateTime?
  latitude                Float?
  longitude               Float?
  programId               Int?
  categories              String[]
  localActor1Name         String?
  localActor1Text         String?
  localActor1Image        String?
  localActor2Name         String?
  localActor2Text         String?
  localActor2Image        String?
  partner1Name            String?
  partner1Text            String?
  partner1Image           String?
  partner2Name            String?
  partner2Text            String?
  partner2Image           String?
  createdBy               String?
  created                 DateTime     @default(now())
  updatedBy               String?
  updated                 DateTime     @default(now())
  youtubeVideo            String?
  published               DateTime     @default(now())
  localization            Localization @relation(fields: [localizationId], references: [gristId])
  program                 Program?     @relation(fields: [programId], references: [gristId])
}

model Localization {
  id             String    @id @db.Uuid
  gristId        Int       @unique
  label          String
  insee          String?
  echelon        String
  department     String?
  departmentName String?
  region         String?
  regionName     String?
  population     Int?
  siren          String
  nature         String
  ncc            String
  Project        Project[]
}

model Program {
  id          String    @id @db.Uuid
  gristId     Int       @unique
  politique   String
  name        String?
  description String
  territoire  String[]
  projects    Project[]
}
